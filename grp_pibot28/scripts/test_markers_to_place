#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Point
import random

class MarkerToPlacePublisher(Node):
    def __init__(self):
        super().__init__('marker_to_place_publisher')

        # Création d'un Publisher sur le topic /marker_to_place
        self.publisher_ = self.create_publisher(Point, '/marker_to_place', 10)

        # Publier un seul marker
        # self.publish_marker_to_place()
        
        # Timer pour publier des messages périodiquement
        self.timer = self.create_timer(1.0, self.publish_marker_to_place)
        self.get_logger().info("Node initialized and publishing to /marker_to_place.")

    def publish_marker_to_place(self):
        # Création d'un message Point avec des coordonnées aléatoires
        msg = Point()
        msg.x = random.uniform(-10.0, 10.0)
        msg.y = random.uniform(-10.0, 10.0)
        msg.z = random.uniform(0.0, 5.0)

        # Publication du message
        self.publisher_.publish(msg)
        self.get_logger().info(f"Published Point: x={msg.x:.2f}, y={msg.y:.2f}, z={msg.z:.2f}")

def main(args=None):
    rclpy.init(args=args)
    node = MarkerToPlacePublisher()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
