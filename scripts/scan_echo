#!/usr/bin/python3
import rclpy
from rclpy.node import Node
from sensor_msgs.msg import LaserScan
from sensor_msgs.msg import PointCloud
from geometry_msgs.msg import Point32
import math

rosNode = None

def scan_callback(scanMsg) :
    global rosNode

    pointCloud = PointCloud()
    angle = scanMsg.angle_min
    for aDistance in scanMsg.ranges :
        if 0.1 < aDistance and aDistance < 5.0 :
            aPoint = Point32()
            aPoint.x = math.cos(angle) * aDistance
            aPoint.y = math.sin(angle) * aDistance
            aPoint.z = 0
            pointCloud.points.append(aPoint)
        angle += scanMsg.angle_increment
    
    sample = [[round(p.x, 2), round(p.y, 2)] for p in pointCloud.points[10:20]]

    rosNode.get_logger().info(f"obs({len(pointCloud.points)}) ...{sample}...")

rclpy.init()
rosNode= Node('scan_interpreter')
rosNode.create_subscription(LaserScan,'scan', scan_callback,10)

rclpy.spin( rosNode)

scanInterpret.destroy_node()
rclpy.shutdown()


